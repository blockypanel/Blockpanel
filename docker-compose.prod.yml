services:
  controller:
    environment:
      - ENVIRONMENT=production
      - USE_POSTGRES=true
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD:-postgres123}@db:5432/minecraft_controller
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-change-this-in-production-min-32-chars}
      - LOG_LEVEL=${LOG_LEVEL:-WARNING}
    restart: always
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 4G
        reservations:
          cpus: '1.0'
          memory: 2G

  db:
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres123}
    restart: always
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 1G
    # Production database with backup volume
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - postgres_backup:/backup
    # Remove port exposure in production for security
    ports: []

  # Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: mc-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/ssl:ro
      - static_files:/var/www/static:ro
    depends_on:
      - controller
    restart: always

  # Redis for session storage and caching (optional)
  redis:
    image: redis:7-alpine
    container_name: mc-redis
    restart: always
    volumes:
      - redis_data:/data
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

volumes:
  postgres_backup:
    name: minecraft-controller_postgres_backup
  static_files:
    name: minecraft-controller_static_files
  redis_data:
    name: minecraft-controller_redis_data
